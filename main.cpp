#include <iostream>
#include <ctime>
#include <cassert>
#include "BigInt.h"
#include "RSA.h"
using namespace std;

int main()
{
	BigInt a, b, c;
	a = "4524612452105635000008923456789005630005630000123454000023435634543200000094235100000000001234567890123000000000000000000000000000000000000000"; 
	b = "94325345426546543645645364564530003";
	cout << a.div(b,c).toString() << endl;
	cout << c.toString() << endl;
	assert((BigInt("4524612452105635000008923456789005630005630000123454000023435634543200000094235100000000001234567890123000000000000000000000000000000000000000") 
		/ BigInt("94325345426546543645645364564530003")).toString() == 
		"47968151419377112344541738620216963793734700353456734461333032916298200517181124373112079614797602831182104");
	assert((BigInt("4524612452105635000008923456789005630005630000123454000023435634543200000094235100000000001234567890123000000000000000000000000000000000000000") 
		% BigInt("94325345426546543645645364564530003")).toString() ==
		"457067444789598341954102335333688");

	assert((BigInt("20000000000")
		/ BigInt("5000000001")).toString() ==
		"3");
	assert((BigInt("20000000000")
		% BigInt("5000000001")).toString() ==
		"4999999997");

	assert((BigInt("99999999999999999999999999999999999999999999999999999999")
		/ BigInt("123456765879856756745345")).toString() ==
		"810000159062291054558565682909300");
	assert((BigInt("99999999999999999999999999999999999999999999999999999999")
		% BigInt("123456765879856756745345")).toString() ==
		"93748044520841167791499");
	assert((BigInt("99999999999999999999999999999999999999999999999999999999000000000000000000000000000000000000")
		/ BigInt("123456765879856756745345")).toString() ==
		"810000159062291054558565682909300759359309736600892808664306658595031");
	assert((BigInt("99999999999999999999999999999999999999999999999999999999000000000000000000000000000000000000")
		% BigInt("123456765879856756745345")).toString() ==
		"27570763860170050619305");

	RSA rsa;
	rsa.init(20);
	cout << rsa.p.toString() << endl;
	cout << rsa.q.toString();
}